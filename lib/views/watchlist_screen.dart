import 'package:flutter/material.dart';
import 'package:flutter_riverpod/flutter_riverpod.dart';
import '../viewmodels/signal_view_model.dart';

class WatchlistScreen extends ConsumerStatefulWidget {
  const WatchlistScreen({Key? key}) : super(key: key);

  @override
  ConsumerState<WatchlistScreen> createState() => _WatchlistScreenState();
}

class _WatchlistScreenState extends ConsumerState<WatchlistScreen> {
  final TextEditingController _tickerController = TextEditingController();

  @override
  void dispose() {
    _tickerController.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    final colorScheme = Theme.of(context).colorScheme;
    final watchlistState = ref.watch(watchlistProvider);

    return Scaffold(
      appBar: AppBar(
        title: const Text(
          'üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ç–∏–∫–µ—Ä–æ–≤',
          style: TextStyle(fontWeight: FontWeight.bold),
        ),
        centerTitle: true,
        actions: [
          IconButton(
            icon: const Icon(Icons.refresh),
            tooltip: '–û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫',
            onPressed: () {
              ref.read(watchlistProvider.notifier).fetchWatchlist();
            },
          ),
        ],
      ),
      body: Container(
        decoration: BoxDecoration(
          gradient: LinearGradient(
            begin: Alignment.topCenter,
            end: Alignment.bottomCenter,
            colors: [
              colorScheme.surface,
              colorScheme.surface.withOpacity(0.9),
            ],
          ),
        ),
        child: Column(
          children: [
            // –§–æ—Ä–º–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–∏–∫–µ—Ä–∞
            Padding(
              padding: const EdgeInsets.all(16),
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.stretch,
                children: [
                  // –ü–æ—è—Å–Ω–µ–Ω–∏–µ –æ —Ä–∞–±–æ—Ç–µ —Å —Ç–∏–∫–µ—Ä–∞–º–∏
                  Container(
                    padding: const EdgeInsets.all(12),
                    margin: const EdgeInsets.only(bottom: 16),
                    decoration: BoxDecoration(
                      color: colorScheme.primaryContainer.withOpacity(0.3),
                      borderRadius: BorderRadius.circular(12),
                      border: Border.all(
                        color: colorScheme.primary.withOpacity(0.3),
                        width: 1,
                      ),
                    ),
                    child: Column(
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: [
                        Row(
                          children: [
                            Icon(Icons.info_outline,
                                color: colorScheme.primary, size: 18),
                            const SizedBox(width: 8),
                            Text(
                              '–í–∞–∂–Ω–æ:',
                              style: TextStyle(
                                fontWeight: FontWeight.bold,
                                color: colorScheme.primary,
                              ),
                            ),
                          ],
                        ),
                        const SizedBox(height: 4),
                        const Text(
                          '–°–∏—Å—Ç–µ–º–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç –∏ –ø—Ä–∏—Å—ã–ª–∞–µ—Ç —Å–∏–≥–Ω–∞–ª—ã —Ç–æ–ª—å–∫–æ –ø–æ —Ç–∏–∫–µ—Ä–∞–º, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã —è–≤–Ω–æ –¥–æ–±–∞–≤–∏—Ç–µ –≤ —ç—Ç–æ—Ç —Å–ø–∏—Å–æ–∫.',
                          style: TextStyle(fontSize: 13),
                        ),
                      ],
                    ),
                  ),

                  // –ü–æ–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–∏–∫–µ—Ä–∞
                  Row(
                    children: [
                      Expanded(
                        child: TextField(
                          controller: _tickerController,
                          textCapitalization: TextCapitalization.characters,
                          decoration: InputDecoration(
                            labelText: '–í–≤–µ–¥–∏—Ç–µ —Ç–∏–∫–µ—Ä –∞–∫—Ü–∏–∏',
                            hintText: '–ù–∞–ø—Ä–∏–º–µ—Ä: AAPL, MSFT, GOOGL',
                            prefixIcon:
                                Icon(Icons.search, color: colorScheme.primary),
                            border: OutlineInputBorder(
                              borderRadius: BorderRadius.circular(12),
                            ),
                          ),
                        ),
                      ),
                      const SizedBox(width: 12),
                      ElevatedButton(
                        onPressed: () {
                          final ticker =
                              _tickerController.text.trim().toUpperCase();
                          if (ticker.isNotEmpty) {
                            ref
                                .read(watchlistProvider.notifier)
                                .addTicker(ticker);
                            _tickerController.clear();

                            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏
                            ScaffoldMessenger.of(context).showSnackBar(
                              SnackBar(
                                content: Text(
                                    '–¢–∏–∫–µ—Ä $ticker –¥–æ–±–∞–≤–ª–µ–Ω –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞'),
                                backgroundColor: Colors.green,
                              ),
                            );
                          }
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: colorScheme.primary,
                          foregroundColor: colorScheme.onPrimary,
                          minimumSize: const Size(110, 56),
                        ),
                        child: const Text('–î–æ–±–∞–≤–∏—Ç—å'),
                      ),
                    ],
                  ),
                ],
              ),
            ),

            // –°–ø–∏—Å–æ–∫ —Ç–∏–∫–µ—Ä–æ–≤
            Expanded(
              child: watchlistState.when(
                loading: () => const Center(child: CircularProgressIndicator()),
                error: (e, _) => Center(
                  child: Column(
                    mainAxisAlignment: MainAxisAlignment.center,
                    children: [
                      const Icon(Icons.error_outline,
                          size: 48, color: Colors.redAccent),
                      const SizedBox(height: 16),
                      Text(
                        '–û—à–∏–±–∫–∞: $e',
                        textAlign: TextAlign.center,
                        style: const TextStyle(fontSize: 16),
                      ),
                      const SizedBox(height: 16),
                      ElevatedButton(
                        onPressed: () {
                          ref.read(watchlistProvider.notifier).fetchWatchlist();
                        },
                        child: const Text('–ü–æ–≤—Ç–æ—Ä–∏—Ç—å'),
                      ),
                    ],
                  ),
                ),
                data: (tickers) => tickers.isEmpty
                    ? _buildEmptyState()
                    : _buildTickersList(tickers, colorScheme),
              ),
            ),
          ],
        ),
      ),
    );
  }

  Widget _buildEmptyState() {
    return Container(
      padding: const EdgeInsets.all(20),
      child: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            const Icon(Icons.radar, size: 80, color: Colors.grey),
            const SizedBox(height: 24),
            const Text(
              '–°–ø–∏—Å–æ–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø—É—Å—Ç',
              style: TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
            ),
            const SizedBox(height: 8),
            const Text(
              '–î–æ–±–∞–≤—å—Ç–µ —Ç–∏–∫–µ—Ä –≤—ã—à–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –µ–≥–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ',
              textAlign: TextAlign.center,
              style: TextStyle(fontSize: 16, color: Colors.grey),
            ),
            const SizedBox(height: 24),
            const Text(
              '–ü–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–∏–∫–µ—Ä–æ–≤, —Å–∏—Å—Ç–µ–º–∞ –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∏—Ö –∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ç–æ—Ä–≥–æ–≤—ã–µ —Å–∏–≥–Ω–∞–ª—ã –Ω–∞ –æ—Å–Ω–æ–≤–Ω–æ–π —ç–∫—Ä–∞–Ω',
              textAlign: TextAlign.center,
              style: TextStyle(fontSize: 14, color: Colors.grey),
            ),
          ],
        ),
      ),
    );
  }

  Widget _buildTickersList(List<String> tickers, ColorScheme colorScheme) {
    return ListView.builder(
      itemCount: tickers.length,
      padding: const EdgeInsets.all(16),
      itemBuilder: (context, index) {
        final ticker = tickers[index];

        return Padding(
          padding: const EdgeInsets.only(bottom: 12),
          child: Card(
            elevation: 2,
            shape: RoundedRectangleBorder(
              borderRadius: BorderRadius.circular(16),
            ),
            child: ListTile(
              contentPadding: const EdgeInsets.all(16),
              title: Text(
                ticker,
                style: const TextStyle(
                  fontSize: 18,
                  fontWeight: FontWeight.bold,
                ),
              ),
              subtitle: const Text(
                '–í –ø—Ä–æ—Ü–µ—Å—Å–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞',
                style: TextStyle(fontSize: 14),
              ),
              leading: Container(
                padding: const EdgeInsets.all(8),
                decoration: BoxDecoration(
                  color: colorScheme.primary.withOpacity(0.1),
                  borderRadius: BorderRadius.circular(8),
                ),
                child: Icon(
                  Icons.trending_up,
                  color: colorScheme.primary,
                  size: 28,
                ),
              ),
              trailing: IconButton(
                icon: const Icon(Icons.remove_circle_outline),
                color: Colors.redAccent,
                tooltip: '–£–¥–∞–ª–∏—Ç—å –∏–∑ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞',
                onPressed: () {
                  _showDeleteConfirmDialog(ticker);
                },
              ),
            ),
          ),
        );
      },
    );
  }

  void _showDeleteConfirmDialog(String ticker) {
    showDialog(
      context: context,
      builder: (BuildContext context) {
        return AlertDialog(
          title: Text('–£–¥–∞–ª–∏—Ç—å $ticker?'),
          content: Text(
            '–¢–∏–∫–µ—Ä $ticker –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω –∏–∑ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞. –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.',
          ),
          actions: [
            TextButton(
              onPressed: () => Navigator.of(context).pop(),
              child: const Text('–û—Ç–º–µ–Ω–∞'),
            ),
            TextButton(
              onPressed: () {
                ref.read(watchlistProvider.notifier).removeTicker(ticker);
                Navigator.of(context).pop();
                ScaffoldMessenger.of(context).showSnackBar(
                  SnackBar(
                    content: Text('$ticker —É–¥–∞–ª–µ–Ω –∏–∑ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞'),
                  ),
                );
              },
              child: const Text('–£–¥–∞–ª–∏—Ç—å'),
            ),
          ],
        );
      },
    );
  }
}
